// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.TicTacToe.module("GameApp", function(GameApp, App, Backbone, Marionette, $, _) {
    return GameApp.TwoPlayersOnlineController = (function(_super) {
      __extends(TwoPlayersOnlineController, _super);

      function TwoPlayersOnlineController() {
        return TwoPlayersOnlineController.__super__.constructor.apply(this, arguments);
      }

      TwoPlayersOnlineController.prototype.initialize = function() {
        this.autoClicked = false;
        this.playerNum = 0;
        this.timer = new Timer();
        this.mode = "two_players_online";
        return TwoPlayersOnlineController.__super__.initialize.apply(this, arguments);
      };

      TwoPlayersOnlineController.prototype.reset = function() {
        TwoPlayersOnlineController.__super__.reset.apply(this, arguments);
        this.playerNum = 0;
        this.autoClicked = false;
        stopLoading();
        this.timer.stopTimer();
        $("#timer").hide();
        return $("#player").hide();
      };

      TwoPlayersOnlineController.prototype.gameOverMessage = function(isWin) {
        TwoPlayersOnlineController.__super__.gameOverMessage.call(this, isWin);
        stopLoading();
        this.timer.stopTimer();
        $("#timer").hide();
        return $("#player").hide();
      };

      TwoPlayersOnlineController.prototype.setEvents = function() {
        TwoPlayersOnlineController.__super__.setEvents.apply(this, arguments);
        return $(window).on("time_out", (function(_this) {
          return function() {
            var cell, index, location, move, moves, parentLocation;
            moves = _this.model.getMoves(_this.validLocation);
            index = Math.floor(Math.random() * moves.length);
            move = moves[index];
            parentLocation = _this.model.parseBackLocation(move[0], move[1]);
            location = _this.model.parseBackLocation(move[2], move[3], parentLocation);
            cell = "." + (parentLocation.className.split(" ").join(".")) + " ." + (location.className.split(" ").join("."));
            return $(cell).click();
          };
        })(this));
      };

      TwoPlayersOnlineController.prototype.handleCellClick = function(location) {
        if (this.playerNum === this.player || this.autoClicked) {
          if (TwoPlayersOnlineController.__super__.handleCellClick.call(this, location, that)) {
            if (this.player === this.playerNum) {
              socket.emit("updateOpponent", parentLocation.className, location.className);
            }
            if (this.autoClicked) {
              stopLoading();
              this.timer.stopTimer();
              this.timer.startTimer();
            } else {
              startLoading();
              this.timer.startTimer();
            }
          }
        }
        if (this.autoClicked) {
          return this.autoClicked = false;
        }
      };

      return TwoPlayersOnlineController;

    })(GameApp.GameController);
  });

}).call(this);
